import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;


import android.app.ProgressDialog;
import android.app.Service;
import android.content.Intent;
import android.os.AsyncTask;
import android.os.Bundle;
import android.os.IBinder;
import android.widget.Toast;


public class OTService extends Service {

	@Override
	public void onCreate() {
		Toast.makeText(this, "My Service Created", Toast.LENGTH_LONG).show();
		
	}
	@Override
	public int onStartCommand(Intent intent, int flags, int startId){
		
		
		
		
		 super.onStartCommand(intent, flags,  startId);
		 
		 
		 Bundle b = intent.getExtras();
		String  grid  = b.getString("grd");
		
		
		String data2 = readuserdata();
	  	final String[] logdata2 = data2.split(",");
	  	String uid = logdata2[0];
	  	String pwd = logdata2[1];
	  	String base = logdata2[2].trim();
	   	String equip= logdata2[3].trim();
	  	String zululocal = logdata2[5].trim();
	  	
	  	
		Toast.makeText(this, "OpenTime Service Starting", Toast.LENGTH_LONG);
		boolean isRunning = true;
		
		return START_STICKY;
		
		
	}

@Override
public IBinder onBind(Intent intent) {
	return null;
}
@Override
public void onDestroy() {
	
	super.onDestroy();
	Toast.makeText(this, "OT Service Stopped", Toast.LENGTH_LONG).show();
	
	
}	


	
	private class getOpenTime extends AsyncTask<String, Void, String> {
		 
		  @Override
		  protected String doInBackground(String... params) {
		    // perform long running operation operation
			  
			 
			
	           String[] OTdata = null;
	           OTdata = new String[8];
	           OTdata[0] = params[0]; // uid
	           OTdata[1] = params[1]; // password
	           OTdata[2] = params[2]; // grid
	           OTdata[3] = params[3]; // base
	           OTdata[4] = params[4]; // equip
	           OTdata[5] = params[5]; // seat
	           OTdata[6] = params[6]; // start date
	           OTdata[7] = params[7]; //end date
	           
	           
	  	        
	  	         return OTDataString;
	  	      
	            
		  }
		 
		 
		  @Override
		  protected void onPostExecute(String result) {
		    // execution of result of Long time consuming operation
			   storeOpenTime(result);
			 
		  }
		 
		 
		  @Override
		  protected void onPreExecute() {
		  // Things to be done before execution of long running operation. For example showing ProgessDialog
			 
			 
		  
		  
		  }
		 
		  
		  @Override
		  protected void onProgressUpdate(Void... values) {
		      // Things to be done while execution of long running operation is in progress. For example updating ProgessDialog
		   }
		}
	
	public String readuserdata(){
		String usrdata = null;
		 FileInputStream fis = null;
	        try {
				fis = openFileInput("PcalData");
				
				 StringBuffer fileContent = new StringBuffer("");

			        byte[] buffer = new byte[1024];
			        
			        try {
			        	@SuppressWarnings("unused")
						int length = 0;
						while ((length = fis.read(buffer)) != -1) {
						    fileContent.append(new String(buffer));
						}
						
						usrdata = (fileContent.toString());
					    
			        } catch (IOException e) {
						return null;
		}
	        } catch (FileNotFoundException e) {}
	        
	
	 return usrdata;
}
}
