package com.yctc.alpaware;

import java.io.BufferedInputStream;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;

import java.io.OutputStream;
import java.net.URL;
import java.net.URLConnection;
import android.app.Activity;
import android.app.ProgressDialog;

import android.content.Intent;
import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.os.AsyncTask;
import android.os.Bundle;
import android.os.Environment;
import android.view.Menu;
import android.view.MenuItem;
import android.view.View;
import android.widget.Button;
import android.widget.TextView;

public class checkdbver extends Activity {

	public static final int Main_Menu =0;
	 private ProgressDialog pDialog;
	  public static final int progress_bar_type = 0; 
	 


	public void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.checkdb);
        
        AlpaDataBaseHelper mdbh = new AlpaDataBaseHelper(this.getApplicationContext());
	     final SQLiteDatabase db = mdbh.getWritableDatabase(); 
        
        // instantiate it within the onCreate method
        pDialog = new ProgressDialog(this);
        pDialog.setMessage("Checking DB Version. Please wait...");
        pDialog.setIndeterminate(false);
        pDialog.setMax(100);
        pDialog.setProgressStyle(ProgressDialog.STYLE_HORIZONTAL);
        pDialog.setCancelable(true);
     // execute this when the downloader must be fired
        
        
        Button chkver = (Button) findViewById(R.id.btnCheckDB);
        chkver.setOnClickListener(new View.OnClickListener() {
         	public void onClick(View view) {
         	// read ver file from internet , read and load value to text box
         		//read value from installed DB and display
         		TextView installedVer = (TextView)findViewById(R.id.tvInstalledVersion);
         		installedVer.setText("");
         		  Cursor c = db.rawQuery("Select verID from ver where rowid = 1",null);	
     			 startManagingCursor(c);
     			 
     			 if (c.getCount() != -1){
     			 c.moveToFirst();
     			 String version = c.getString(c.getColumnIndex("VerId"));
     			 c.close();
     	 		 installedVer.setText(version.toString());}
		 	     
         		versionDownloader downloadFile = new versionDownloader();
     	  	     downloadFile.execute("http://199.68.191.212/");	
         	}});
        
        Button getnewdb = (Button) findViewById(R.id.btnGetNewDB);
        getnewdb.setOnClickListener(new View.OnClickListener() {
        	public void onClick(View view) {
        		Intent myIntent = new Intent(getBaseContext(), filemaintmain.class);	
    			startActivityForResult(myIntent, 0);
        	

             	}});
	}	

	public boolean onCreateOptionsMenu(Menu menu){
		menu.add(0,Main_Menu,0,"Main Menu");
		
		return true;
		}

	public boolean onOptionsItemSelected (MenuItem item ){
		switch (item.getItemId()){
		case Main_Menu :
			
			Intent myIntent = new Intent(getBaseContext(), filemaintmain.class);	
			startActivityForResult(myIntent, 0);
		   return true;
	      }
		return false;
	      }	


	 private class versionDownloader extends AsyncTask<String, Integer, String> {
		 
		  @Override
		  protected String doInBackground(String... aurl) {
			
			  
			   
		
			 
			 File sd = new File(getFilesDir().getParent()+"/databases/");
		
			//	File DataDir = new File(Environment.getDataDirectory().toString() + "/data/com.yctc.alpaware/databases/");
				   
		 if (!sd.exists()){
			 
			 sd.mkdir();
			 
			 
		 }
				       
			 
				 int count;
			        try {
			            URL url = new URL(aurl[0] + "MainDBVer.txt");
			            URLConnection conection = url.openConnection();
			            conection.connect();
			            // getting file length
			            int lenghtOfFile = conection.getContentLength();
			 
			            // input stream to read file - with 8k buffer
			            InputStream input = new BufferedInputStream(url.openStream(), 8192);
			 
			            // Output stream to write file
			            OutputStream output = new FileOutputStream(sd + "/MainDBVer.txt");
			 
			            byte data[] = new byte[1024];
			 
			            long total = 0;
			 
			            while ((count = input.read(data)) != -1) {
			                total += count;
			                // publishing the progress....
			                // After this onProgressUpdate will be called
			                int prog = (int) ((total*100)/lenghtOfFile);
			                publishProgress(prog);
			 
			                // writing data to file
			                output.write(data, 0, count);
			            }
			 
			            // flushing output
			            output.flush();
			 
			            // closing streams
			            output.close();
			            input.close();
			 
			        } catch (Exception e) {
			           
			        }
			 
			        return null;

		    }
		 
		 
		


		@Override
		  protected void onPostExecute(String result) {
		    // execution of result of Long time consuming operation
		  // copy file to data dir here
			pDialog.dismiss();
			// read file from SD and publish to proper Tag
			
			TextView latestVer = (TextView)findViewById(R.id.tvLatestVersion); // set target button
		File sd = new File(getFilesDir().getParent()+"/databases/" + "/MainDBVer.txt");
		String usrdata = null;
		 FileInputStream fis = null;
	        try {
	        	 
				fis = new FileInputStream(sd);
				
				 StringBuffer fileContent = new StringBuffer("");
                    byte[] buffer = new byte[1024];
			        try {
			        	@SuppressWarnings("unused")
						int length = 0;
						while ((length = fis.read(buffer)) != -1) {
						    fileContent.append(new String(buffer));
						}
						
						usrdata = (fileContent.toString().trim());
						latestVer.setText(usrdata.toString());
					    
			        } catch (IOException e) {}
		
	        		} catch (FileNotFoundException e) {
	        			utilities util = new utilities();
	        			util.showaction("File not Found", checkdbver.this);}
	        
	        //now get installed version and display to TextView
	       
	       
	 	   
			 
		}
		
		 
		  @Override
		  protected void onPreExecute() {
		  // Things to be done before execution of long running operation. For example showing ProgessDialog
			  super.onPreExecute();
		        pDialog.show();

		
		  
		  }
		 
		
		  protected void onProgressUpdate(Integer... progress) {
	             
	             pDialog.setProgress((progress[0]));
	        }
		  
		  
		  }
		






}
