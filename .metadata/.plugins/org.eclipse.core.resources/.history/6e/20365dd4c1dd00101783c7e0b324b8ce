package com.yctc.alpaware;


import java.sql.Date;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.GregorianCalendar;

import android.app.Activity;
import android.app.DatePickerDialog;
import android.app.Dialog;
import android.content.Intent;
import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.os.Bundle;
import android.view.Menu;
import android.view.MenuItem;
import android.view.View;

import android.widget.Button;
import android.widget.CheckBox;
import android.widget.DatePicker;
import android.widget.EditText;
import android.widget.TextView;


public class landings extends Activity{
	public static final int Main_Menu =0;    
	public static final int Menu_1 = 1;
	
	private EditText mDateDisplay;
	private Button mPickDate;
	 
	    public int mMonth, mDay, mYear,iTotLandings;
	    public String sMonth,sYear, sDay, msg,sTotLandings,qry;
		String srchDate;
		
	    

	    static final int DATE_DIALOG_ID = 1;
	    
	    
	    @Override
		
		 
		
		public void onCreate(Bundle savedInstanceState) {
		    
			super.onCreate(savedInstanceState);
		    setContentView(R.layout.landings);
		    // capture our View elements
		   
		 // capture our View elements
	        mDateDisplay = (EditText) findViewById(R.id.LandingStartDate);
	        mPickDate = (Button) findViewById(R.id.lDate);
	        // add a click listener to the button
	        mPickDate.setOnClickListener(new View.OnClickListener() {
	            public void onClick(View v) {
	                showDialog(DATE_DIALOG_ID);
	            }
	        });
	    
	       
	    
	    
	 // get the current date and put it in the date display
        Calendar c = Calendar.getInstance();
        // need to set the calendar object to the system date
        // then subtract 90 days for the search start point
       

        mYear = c.get(Calendar.YEAR);
        mMonth = c.get(Calendar.MONTH);
        mDay = c.get(Calendar.DAY_OF_MONTH);
        c.set(mYear, mMonth + 1, mDay);// sets cal to todays date
        c.add(Calendar.DAY_OF_MONTH, -90);
        mYear = c.get(Calendar.YEAR);
        mMonth = c.get(Calendar.MONTH);
        mDay = c.get(Calendar.DAY_OF_MONTH);
        sYear = Integer.toString(mYear);
        sMonth = Integer.toString(mMonth);
        sDay = Integer.toString(mDay);
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
        String sStartDate = sdf.format(c.getTime());
        
        // Format to normal date string
        //utilities dt = new utilities();
        //final String dateString = dt.calcDateString(mYear, mMonth, mDay);
        mDateDisplay.setText(sStartDate);
    
    
        final Button s1 = (Button) findViewById(R.id.calcLandings);
        s1.setOnClickListener(new View.OnClickListener() {
        	public void onClick(View view) {
        		
        		
        		CheckBox c1 = (CheckBox) findViewById(R.id.Capt);
        		
        		CheckBox c2 = (CheckBox) findViewById(R.id.FO);
        		
        		EditText t1  = (EditText) findViewById(R.id.LandingStartDate);
        		
        		srchDate = t1.getText().toString();
        		
        	  UserDataHelper mdbh = new UserDataHelper(getApplicationContext());
      	      final SQLiteDatabase db = mdbh.getWritableDatabase(); 
      	      if (c1.isChecked()){
      	    	  c2.setChecked(false);
      	    	 qry = "Select * from fltlog where Date >=  '" + srchDate + "' and land like 'Captain'" ;
      	      }
      	    if (c2.isChecked()){
      	    	c1.setChecked(false);
      	    	 qry = "Select * from fltlog where Date >= '" + srchDate + "'and land like 'FO'" ;  
      	      }
      	     Cursor cu = db.rawQuery(qry ,null);
      	 		cu.moveToFirst();
      	        if (cu.getCount() > 0) {
      	        	
      	        	iTotLandings = cu.getCount();
      	        	
      	        	
      	        } else {
      	        	iTotLandings = 0;
      	        }
      	      TextView ttlLand = (TextView) findViewById(R.id.totlandings);
      	      sTotLandings = Integer.toString(iTotLandings);
      	     ttlLand.setText(sTotLandings);
      		cu.close();
        	}});

       
	    }	    
	    	    
	    
	
	@Override
	protected Dialog onCreateDialog(int id) {
	    switch (id) {
	    case DATE_DIALOG_ID:
	        return new DatePickerDialog(this,
	                    mDateSetListener,
	                    mYear, mMonth, mDay);
	    }
	    return null;
	}
	
	
	
	
	
	
	
	
	// the callback received when the user "sets" the date in the dialog
	private DatePickerDialog.OnDateSetListener mDateSetListener =
	        new DatePickerDialog.OnDateSetListener() {

	            public void onDateSet(DatePicker view, int year, 
	                                  int monthOfYear, int dayOfMonth) {
	                mYear = year;
	                mMonth = monthOfYear;
	                mDay = dayOfMonth;
	                
	                utilities dt = new utilities();
	                String dateString = dt.calcDateString(mYear, mMonth, mDay);
	                mDateDisplay.setText(dateString);
	                
	            }
	            
	        };
	
	       	
	
	
	@Override
	public boolean onCreateOptionsMenu(Menu menu){
				menu.add(0,Main_Menu,0,"Main Menu");
				menu.add(0,Menu_1,0,"LogBook Menu");
				return true;
				}

			@Override
			public boolean onOptionsItemSelected (MenuItem item ){
				switch (item.getItemId()){
				case Main_Menu :
					
					Intent myIntent = new Intent(getBaseContext(), PocketCal20.class);	
					startActivityForResult(myIntent, 0);
					
				return true;
				case Menu_1 :
					
					Intent myIntent1 = new Intent(getBaseContext(), fltlogmain.class);	
					startActivityForResult(myIntent1, 0);
					
				return true;
				
				}
				return false;
				}
		


	

}








	
	





